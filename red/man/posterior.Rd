% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/posterior.R
\name{posterior}
\alias{posterior}
\alias{posterior.stanfit}
\title{Extract posterior density}
\usage{
posterior(object, pars, ...)

\method{posterior}{stanfit}(object, pars, dim.names, melt, fun, ...)
}
\arguments{
\item{object}{output from call to \code{\link[rstan]{sampling}}.}

\item{pars}{character vector of posterior parameter samples to be extracted.}

\item{...}{additional arguments to function}

\item{dim.names}{optional list of named lists containing dimension names for each parameter. If only a single \code{list(list())} entry is given it is applied to all parameters. Not all parameters need to be provided with dimension names.}

\item{melt}{logical value indicating whether output arrays should be converted to long format using \code{rehape2::melt.array()}}

\item{fun}{one of either "mean", "median" or "quantiles", which will be calculated across iterations if supplied.}
}
\value{
Returns a list of posterior samples for each parameter. If \code{melt = TRUE} then these are returned as data.frames, otherwise they are arrays. If \code{fun} is specificed then the output is summarised across iterations.
}
\description{
Takes as input a \code{stanfit} object from call to \code{\link[rstan]{sampling}} and extracts the posterior or functions thereof.
}
\examples{
require(rstan)

mdl <- "data{ int n; vector[n] x; }	parameters{ real mu; }	model{ x ~ normal(mu, 1.0);} generated quantities{ vector[n] x_sim; real x_sim_sum; for (i in 1:n) x_sim[i] = normal_rng(mu, 1.0); x_sim_sum = sum(x_sim);}\n"	
mdl <- stan_model(model_code = mdl)
n = 20
x = rnorm(n, 0, 2)

mdl.fit <- sampling(mdl, data = list(n = n, x = x), init = function() list(mu = 0), chains = 1)

posterior(mdl.fit, pars = c("mu", "x_sim", "x_sim_sum"), fun = "quantiles")

}
